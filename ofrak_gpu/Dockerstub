# If we want to compile the Futhark in the build process

# Install dependencies
RUN apt-get update && apt-get install -y libtinfo-dev libgmp-dev zlib1g-dev wget make

# Switch shells for this next command
SHELL ["/bin/bash", "-c"]
# Add futhark installation script
RUN printf """#!/bin/bash \n\
\n\
# Get the latest release tag from GitHub API (Populated by Dockerstub during build) \n\
LATEST_RELEASE=\"$(curl -s https://api.github.com/repos/diku-dk/futhark/releases/latest | grep tag_name | cut -d '"' -f 4)\" \n\
\n\
# Remove leading v if needed \n\
if [[ \${LATEST_RELEASE:0:1} == \"v\" ]]; then \n\
	LATEST_RELEASE=\"\${LATEST_RELEASE:1}\" \n\
fi \n\
\n\
# Construct the URL for the latest release using the filename format \n\
FILE_NAME=\"futhark-\${LATEST_RELEASE}-linux-x86_64.tar.xz\" \n\
DOWNLOAD_URL=\"https://github.com/diku-dk/futhark/releases/latest/download/\${FILE_NAME}\" \n\
\n\
# Download and install the latest release \n\
cd /tmp && \ \n\
wget \"\$DOWNLOAD_URL\" && \ \n\
mkdir futhark && \ \n\
tar -xf \"\$FILE_NAME\" -C futhark --strip-components=1 && \ \n\
cd futhark && \ \n\
make install && \ \n\
cd /tmp && \ \n\
rm -rf futhark \"\$FILE_NAME\" # Clean up \n\
    """ >> /tmp/install_futhark.sh
# Return to default shell
SHELL ["/bin/sh", "-c"] 

# Install futhark and clean up
RUN cd /tmp && \
    chmod +x ./install_futhark.sh && \
    ./install_futhark.sh && \
    rm ./install_futhark.sh
